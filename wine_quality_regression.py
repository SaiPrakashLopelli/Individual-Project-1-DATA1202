# -*- coding: utf-8 -*-
"""wine_quality_regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14zYDWZeytvTjpftXFW3CE4DyzwbHoh69
"""

# STUDENT: SAI PRAKASH LOPELLI
# S.ID: 101001356
# ASSIGNMENT 1 - LINEAR REGRESSION
# SUBJECT: DATA1200 : INTRODUCTION TO DATA ANALYSIS

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Loading the dataset
data = pd.read_csv('winequality-red.csv')

# Quick look at the data
print("Basic Info:")
print(data.info())
print("\nStats:")
print(data.describe())
print("\nMissing Values:")
print(data.isnull().sum())

# Plotting some visuals
plt.hist(data['quality'], bins=10)
plt.title('Quality Scores (Full Data)')
plt.xlabel('Quality')
plt.ylabel('Number of Wines')
plt.show()

plt.scatter(data['alcohol'], data['quality'])
plt.title('Alcohol vs Quality (Full Data)')
plt.xlabel('Alcohol')
plt.ylabel('Quality')
plt.show()

# Setting up for linear regression
X = data.drop('quality', axis=1)  # Features
y = data['quality']  # Target

# Splitting into train (80%) and test (20%)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
print("\nTraining Size:", X_train.shape)
print("Testing Size:", X_test.shape)

# Training the model
model = LinearRegression()
model.fit(X_train, y_train)
print("\nNumbers for Each Feature:", model.coef_)
print("Starting Point:", model.intercept_)

# Making predictions and checking results
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print("\nMean Squared Error (MSE):", mse)
print("R-squared (R2):", r2)